import random
import requests
import pypdb

# RESTful search interface
url = 'http://www.rcsb.org/pdb/rest/search'


# add XML formatted search query here. Generator can help: http://www.rcsb.org/pdb/software/rest.do
query_text = """

<orgPdbQuery>

<queryType>org.pdb.query.simple.XrayDiffrnSourceQuery</queryType>

<diffrn_source.pdbx_synchrotron_site.value>Australian Synchrotron</diffrn_source.pdbx_synchrotron_site.value>

</orgPdbQuery>

"""


# pulls the header of the search results from the url (PDB ID)
header = {'Content-Type': 'application/x-www-form-urlencoded'}

response = requests.post(url, data=query_text, headers = header)

# converts the big string of PDB IDs into a list and removes empty spaces
def convert_to_ID(results):
    global PDB_list
    text = results.text
    PDB_list = list(text.split('\n'))
    PDB_list = [string for string in PDB_list if string != ""]
    return PDB_list

structures = convert_to_ID(response)

# grabs a random structure from MX PDB list
structure = random.choice(structures)

# a list of colour spectrums that resulting pymol model can be displayed in
colours = [
"density_deepblue_skyblue_marine_lightblue",
"firebrick_ruby_raspberry_warmpink",
"sand_yelloworange_yellow_paleyellow",
"smudge_palegreen_limegreen_limon_green_forest"]

# pick a colour!
colour_scheme = random.choice(colours)

# generating the pymovie file. Pymol needs txt files.

file = 'pymovie.txt'

with open(file, '+w') as filetowrite:

    filetowrite.write(f"""
    # This is a pymol movie file, generated by pymolmovie_gen.py

    reinitialize

    set movie_loop, 1

    # downloads the complex and sets it up
    fetch {structure}, async=0
    hide nonbonded
    hide sticks
    spectrum count, {colour_scheme}
    set sphere_scale, 0.7
    wizard message, 'PDB ID = {structure}.'

    orient

    # makes film of slow rotation around Y axis, 360 degrees
    mset 1x720
    mview store, 1
    mview store, 720
    turn y, 120
    mview store, 240, power=1.0
    turn y, 120
    mview store, 480, power=1.0


    mplay
    """)

filetowrite.close()
